[{"D:\\Workspace\\cashbook\\src\\index.js":"1","D:\\Workspace\\cashbook\\src\\reportWebVitals.js":"2","D:\\Workspace\\cashbook\\src\\App.js":"3","D:\\Workspace\\cashbook\\src\\mocks\\browser.js":"4","D:\\Workspace\\cashbook\\src\\mocks\\handlers.js":"5"},{"size":565,"mtime":1612116420590,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1612116420554,"results":"8","hashOfConfig":"7"},{"size":4347,"mtime":1615719791476,"results":"9","hashOfConfig":"7"},{"size":122,"mtime":1615718409391,"results":"10","hashOfConfig":"7"},{"size":474,"mtime":1615715640663,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vmm3o8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\Workspace\\cashbook\\src\\index.js",[],["24","25"],"D:\\Workspace\\cashbook\\src\\reportWebVitals.js",[],"D:\\Workspace\\cashbook\\src\\App.js",["26"],"import React, { useState, useEffect } from 'react';\nimport {worker} from './mocks/browser';\nimport './App.css';\n\nif(process.env.NODE_ENV === 'development'){\n  worker.start();\n}\n\nconst Button_Text_Mapping = {\n  1: 'Out',\n  2: 'In'\n}\n\nfunction Header({balance}){\n  return(\n    <div className=\"header\">\n      <h1>My Cashbook</h1>\n      <div className=\"today-balance\">\n        Today Balance\n        <br></br>\n        <h1> {balance} ₹</h1>\n      </div>\n    </div>\n  )\n}\n\nfunction Transaction({entry}){\n  return (\n    <div className=\"transaction\">\n       { entry.length === 0 ? <h3>No Entry Found! </h3>: <div className=\"entry\"><table>{entry.map((e)=>{\n          return <tr><td>{e.timestamp.toString()}<h1>{e.note}</h1></td><td className=\"out\">Out <br></br> {e.type === 1?<h1>{`₹${e.amount}`}</h1>:'-'}</td><td className=\"in\">In <br></br> {e.type === 2? <h1>{`₹${e.amount}`}</h1>:'-'}</td></tr>\n       })}</table></div>\n       }\n    </div>\n  )\n}\n\nfunction Footer({onClick}){\n  return (\n    <div className=\"action-group\">\n      <button className=\"red\" onClick={()=>onClick(1)}>Out</button>\n      <button className=\"green\"  onClick={()=>onClick(2)}>In</button>\n    </div>\n  )\n}\n\nfunction Modal(props){\n  const {buttonText, onCloseClick, onSubmit} = props;\n  const [amount, setAmount] = useState();\n  const [note, setNote] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const handleSubmit = ()=>{\n    const transaction = {\n      type:buttonText === 'In'? 2 : 1,\n      amount,\n      note,\n      timestamp: new Date()\n    }\n    onSubmit(transaction);\n  }\n\n  useEffect(()=>{\n    validate();\n  },[note, amount])\n\n  const handleInputChange = (e) =>{\n    setAmount(e.target.value);\n  }\n\n  const handleNoteChange = (e)=>{\n    setNote(e.target.value)\n  }\n  \n  const validate = () =>{\n    if(note && amount) setIsDisabled(false);\n    else setIsDisabled(true);\n  }\n  return (\n    <div className=\"model\">\n      <div className=\"model-content\">\n        <button className=\"close-btn\" onClick={onCloseClick}>Close</button>\n        <h1>New Entry</h1>\n        <input onChange={handleInputChange} value={amount} placeholder=\"₹0.00\" type=\"number\"></input>\n        <textarea onChange={handleNoteChange} value={note} placeholder=\"Entry Note\"/>\n        <button\n          disabled={isDisabled} \n          className={buttonText==='In'?'green-btn':'red-btn'}\n          onClick={handleSubmit}>{buttonText}</button>\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  const [showModel, setShowModel] = useState(false); \n  const [type, setType] = useState(0); \n  const [transaction, setTransaction] = useState([]);\n  const [balance, setBalance] = useState(0);\n\n  //get entries on initial render\n  useEffect(()=>{\n    function getEntries(){\n      fetch('/entry')\n      .then(res=>res.json())\n      .then(data=>{\n        setTransaction(data);\n        calculateBalance(data);\n      });\n    }\n\n    getEntries();\n\n  }, [])\n\n  //post entries\n  useEffect(()=>{\n    function postEntries(){\n      fetch('/entry', {\n        method: 'POST',\n        body: JSON.stringify(transaction)\n      })\n      .then(res=>res.json())\n      .then(data=>{\n        console.log(data);\n      });\n    }\n\n    postEntries();\n\n  }, [transaction])\n\n  //handle in and out button click\n  const handleButtonClick = (type) =>{\n    setType(type);\n    setShowModel(true);\n  }\n\n  //handle close modal click\n  const handleCloseClick = ()=>{\n    setShowModel(false);\n  }\n\n  //calculate today's balance\n  const calculateBalance = (allTransactions) =>{\n    const balance = allTransactions.reduce((pValue, cValue)=>{\n      let balance = pValue;\n      if(cValue.type === 2){\n        balance += parseFloat(cValue.amount);\n      }else{\n        balance -= parseFloat(cValue.amount);\n      }\n\n      return balance;\n    }, 0)\n\n    setBalance(balance);\n  }\n\n  // handle entry submit\n  const handleSubmit = (transactionObj)=>{\n    const allTransactions = [...transaction, transactionObj];\n    setTransaction(allTransactions);\n    setShowModel(false);\n    calculateBalance(allTransactions);\n  }\n\n  return (\n    <div className=\"App\">\n    <Header balance={balance}/>\n    <Transaction entry={transaction}/>\n    {showModel && <Modal buttonText={Button_Text_Mapping[type]} onCloseClick={handleCloseClick} onSubmit={handleSubmit}/>}\n    <Footer onClick={handleButtonClick}/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Workspace\\cashbook\\src\\mocks\\browser.js",[],"D:\\Workspace\\cashbook\\src\\mocks\\handlers.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":64,"column":5,"nodeType":"33","endLine":64,"endColumn":19,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validate'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [note, amount, validate]",{"range":"40","text":"41"},[1608,1622],"[note, amount, validate]"]